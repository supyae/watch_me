<?php
/**
 * Created by PhpStorm.
 * User: hivelocity
 * Date: 20/7/16
 * Time: 2:35 PM
 */

namespace App\Repositories\Schedule;

use App\Repositories\GeneralRepository;
use App\Repositories\GeneralRepositoryInterface;

class ScheduleRepository extends GeneralRepository implements GeneralRepositoryInterface
{
    /**
     * ScheduleRepository constructor.
     */
    public function __construct()
    {
        parent::__construct(new Schedule());
    }

    public function index()
    {
        return $this->model->with('movie', 'theatre')->orderBy('id','DESC')->paginate(10);
    }

    public function destroy($id)
    {
        parent::destroy($id); // TODO: Change the autogenerated stub

        Available::where('schedule_id', $id)->delete();
    }

    /** Front end */
    /**
     * get the current movie between current date and coming one week;
     */
    public function get_within_Oneweek_movie($start, $end)
    {
        $data = $this->model->with('movie')
            ->whereBetween('start_date', [$start, $end])
            ->orderBy('start_date', 'ASC')
            ->limit(8)
            ->get();
        return $data;
    }

    public function get_by_theatre($theatre_id){

        $today = date('Y-m-d');

//        $data = $this->model->with(['available' => function($query) use($today) {
//            $query->where('show_date', '>=', $today);
//        }], 'available.timetable', 'movie')
//            ->where('theatre_id', $theatre_id)
//            ->get();

        $data = $this->model->with(['available' => function($query) use($today){
            $query->where('show_date', '>=', $today);
        }, 'available.timetable', 'movie'])
            ->where('theatre_id', $theatre_id)
            ->get();

        return $data;
    }

}